{"version":3,"file":"windmillcode-wml-slicebox.mjs","sources":["../../../projects/wml-slicebox/src/lib/wml-slicebox/wml-slicebox.component.ts","../../../projects/wml-slicebox/src/lib/wml-slicebox/wml-slicebox.component.html","../../../projects/wml-slicebox/src/lib/wml-slicebox.module.ts","../../../projects/wml-slicebox/src/public-api.ts","../../../projects/wml-slicebox/src/windmillcode-wml-slicebox.ts"],"sourcesContent":["// angular\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  WMLButton,\r\n  WMLImage,\r\n  WMLUIProperty,\r\n} from '@windmillcode/wml-components-base';\r\n\r\n// rxjs\r\nimport {\r\n  combineLatest,\r\n  concatMap,\r\n  debounceTime,\r\n  filter,\r\n  fromEvent,\r\n  interval,\r\n  of,\r\n  startWith,\r\n  Subject,\r\n  takeUntil,\r\n  tap,\r\n  timer,\r\n} from 'rxjs';\r\n\r\nlet retriveValueFromCSSUnit = (str: string) => {\r\n  return parseFloat(str.match(/-?\\d+/)[0]);\r\n};\r\nlet updateClassString=(obj:any,myClassDefault:string,classListDefault:string)=>{\r\n\r\n  return (val:string,type:\"add\"|\"remove\"=\"add\")=>{\r\n      let myClass=myClassDefault\r\n      let classList=classListDefault\r\n      if(type === \"add\"){\r\n        obj[classList].push(val)\r\n      }\r\n      else if(type === \"remove\"){\r\n        obj[classList] = (obj[classList])\r\n        .filter((myClass)=>{\r\n          return myClass !== val\r\n        })\r\n      }\r\n      obj[myClass] = obj[classList]\r\n      .reduce((acc,x,i)=>{\r\n        return acc+ \" \" +  x\r\n      },\"\")\r\n    }\r\n}\r\n\r\n// misc\r\n\r\n@Component({\r\n  selector: 'wml-slicebox',\r\n  templateUrl: './wml-slicebox.component.html',\r\n  styleUrls: ['./wml-slicebox.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class WmlSliceboxComponent {\r\n  constructor(\r\n    public cdref: ChangeDetectorRef,\r\n    public renderer2: Renderer2,\r\n    public el: ElementRef\r\n  ) {}\r\n\r\n  generateClassPrefix(prefix: string) {\r\n    return (val: string) => {\r\n      return prefix + val;\r\n    };\r\n  }\r\n  classPrefix = this.generateClassPrefix('WmlSlicebox');\r\n  targetPerspectiveComputedStyle: CSSStyleDeclaration;\r\n  @Input('params') params: WmlSliceboxParams ;\r\n  @ViewChild('targetPerspective') targetPerspective: ElementRef;\r\n\r\n  @HostBinding('class') myClass: string = this.classPrefix(`View`);\r\n  ngUnsub = new Subject<void>();\r\n  perspective = new WMLUIProperty();\r\n  // TODO possible development no way to pause transitions, may refactor to use animations\r\n  togglePauseBtn = new WMLButton({\r\n    click: () => {\r\n      this.params._cuboids?.forEach((cuboid) => {\r\n        cuboid.style.transition = 'none';\r\n        cuboid.style.animationPlayState =\r\n          cuboid.style.animationPlayState !== 'paused' ? 'paused' : 'running';\r\n        // cuboid.style.animationPlayState = \"paused\"\r\n      });\r\n      this.cdref.detectChanges();\r\n    },\r\n  });\r\n\r\n  cacheImages = () => {\r\n    let savedImages$ = this.params.images.map((sliceboxImg) => {\r\n      let image = new Image();\r\n      image.crossOrigin = 'Anonymous';\r\n      image.style.height = this.params.sliceboxSize.height + 'px';\r\n      image.style.width = this.params.sliceboxSize.width + 'px';\r\n      this.cdref.detectChanges();\r\n      let savedImage$ = fromEvent(image, 'load').pipe(\r\n        takeUntil(this.ngUnsub),\r\n        tap((res) => {\r\n          let canvas: HTMLCanvasElement =\r\n            this.renderer2.createElement('canvas');\r\n          let context = canvas.getContext('2d');\r\n          canvas.height = this.params.sliceboxSize.height;\r\n          canvas.width = this.params.sliceboxSize.width;\r\n          context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n          sliceboxImg.cachedSrc = canvas.toDataURL('image/png');\r\n        })\r\n      );\r\n      image.src = sliceboxImg.src;\r\n      return savedImage$;\r\n    });\r\n    return combineLatest(savedImages$);\r\n  };\r\n\r\n  hostStyle =()=> getComputedStyle(this.el.nativeElement);\r\n  updateCssVars = () => {\r\n    this.el.nativeElement.style.setProperty(\r\n      '--time-for-one-cuboid-rotation',\r\n      this.params.speed / 1000 + 's'\r\n    );\r\n    this.el.nativeElement.style.setProperty(\r\n      '--vertical-rotate',\r\n      this.params.orientation === 'v' ? -1 : 0\r\n    );\r\n    this.el.nativeElement.style.setProperty(\r\n      '--horizontal-rotate',\r\n      this.params.orientation === 'h' ? -1 : 0\r\n    );\r\n    this.el.nativeElement.style.setProperty(\r\n      '--reverse-deg-end',\r\n      this.params.nextRotationDegree ??\r\n        this.hostStyle().getPropertyValue('--reverse-deg-end')\r\n    );\r\n    this.el.nativeElement.style.setProperty(\r\n      '--disperse-speed',\r\n      this.params.disperseSpeed / 1000 + 's'\r\n    );\r\n    this.el.nativeElement.style.setProperty(\r\n      '--animation-easing',\r\n      this.params.easing\r\n    );\r\n    this.el.nativeElement.style.setProperty(\r\n      '--side-background-color',\r\n      this.params.colorHiddenSides\r\n    );\r\n\r\n    this.cdref.detectChanges();\r\n  };\r\n\r\n  setSliceBoxDims() {\r\n    if (this.params.sliceboxSizeUseProvidedValues) {\r\n      if (!this.params.sliceboxSize.height || !this.params.sliceboxSize.width) {\r\n        throw new Error(\r\n          'you have indicated that you want to use provided values for width and height for the size of the slicebox, please provide them in the sliceboxSize or set sliceboxSizeUseProvidedValues to false'\r\n        );\r\n      }\r\n    } else {\r\n      this.params.sliceboxSize.height = retriveValueFromCSSUnit(\r\n        this.targetPerspectiveComputedStyle.getPropertyValue('height')\r\n      );\r\n      this.params.sliceboxSize.width = retriveValueFromCSSUnit(\r\n        this.targetPerspectiveComputedStyle.getPropertyValue('width')\r\n      );\r\n    }\r\n  }\r\n\r\n  sliceBoxInit = () => {\r\n    this.params.itemsCount = this.params.images.length;\r\n    this.targetPerspectiveComputedStyle = getComputedStyle(\r\n      this.targetPerspective.nativeElement\r\n    );\r\n    this.setSliceBoxDims();\r\n    this.params.isReady = true;\r\n    return this.startSlideShow();\r\n  };\r\n\r\n  stopSlideShowSubj =new Subject<void>()\r\n  startSlideShow = () => {\r\n\r\n    let obs$ = this.params.autoplay\r\n      ? interval(this.params.interval)\r\n      : timer(this.params.interval);\r\n\r\n\r\n    return obs$.pipe(\r\n      startWith(0),\r\n      takeUntil(this.stopSlideShowSubj),\r\n      takeUntil(this.ngUnsub),\r\n\r\n      tap(() => {\r\n        this.navigate(this.params.autoplay ? 'next':null);\r\n      })\r\n    );\r\n  };\r\n\r\n  navigate = (dir: 'next' | 'prev', jumpTo?) => {\r\n    this.stopSlideShowSubj.next()\r\n    if (\r\n      this.checkIfSliceboxCanAnimate()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.params.prev.index = this.params.current.index;\r\n    this.determineNextSlide(dir,jumpTo);\r\n    this.setupCuboids();\r\n    this.setupSlides();\r\n  };\r\n\r\n  setupCuboids = () => {\r\n    let boxStyle: any = {\r\n      width: this.params.sliceboxSize.width,\r\n      height: this.params.sliceboxSize.height,\r\n      perspective: this.params.perspective + 'px',\r\n    };\r\n    this.perspective.style = boxStyle;\r\n    let config = {\r\n      ...this.params,\r\n      items: this.params.images,\r\n      prev: this.params.prev,\r\n      current: this.params.current,\r\n      o: this.params.orientation,\r\n      reverse:this.params._reverse\r\n    };\r\n    this.params._cuboids = Array(this.params.cuboidsCount)\r\n      .fill(null)\r\n      .map((nullVal, index0) => {\r\n        let cuboid = new WmlSliceboxCuboidParams({\r\n          pos: index0,\r\n          ...config,\r\n        });\r\n        this.setCuboidSize(cuboid);\r\n        this.configureCuboidStyles(cuboid);\r\n        return cuboid;\r\n      });\r\n    this.cdref.detectChanges();\r\n  };\r\n\r\n  setupSlides = () => {\r\n\r\n      if(this.params.autoplay){\r\n        this.params.isAnimating = true;\r\n        this.rotateSlide(\"next\");\r\n      }\r\n      else if(!this.params.autoplay) {\r\n        this.params._cuboids.forEach((cuboid) => {\r\n          this.setupImagesBeforeRotation(cuboid);\r\n        });\r\n      }\r\n\r\n  };\r\n  showImageCuboid = (cuboid: WmlSliceboxCuboidParams, imgPos, cuboidSide) => {\r\n\r\n    let sideIdx;\r\n    let item = cuboid.images[imgPos];\r\n    let imgParam = {\r\n      'background-size':\r\n        cuboid.sliceboxSize.width + 'px ' + cuboid.sliceboxSize.height + 'px',\r\n      'background-image': 'url(' + item.cachedSrc + ')',\r\n    };\r\n\r\n    switch (cuboidSide) {\r\n      case 1:\r\n        sideIdx = 0;\r\n        break;\r\n      case 2:\r\n        sideIdx = cuboid.o === 'v' ? 4 : 2;\r\n        break;\r\n      case 3:\r\n        sideIdx = 1;\r\n        break;\r\n      case 4:\r\n        sideIdx = cuboid.o === 'v' ? 5 : 3;\r\n        break;\r\n    }\r\n\r\n    imgParam['background-position'] =\r\n      cuboid.o === 'v'\r\n        ? -(cuboid.pos * cuboid.size.width) + 'px 0px'\r\n        : '0px -' + cuboid.pos * cuboid.size.height + 'px';\r\n\r\n    let val: WMLUIProperty =\r\n      cuboid[\r\n        [\r\n          'frontSide',\r\n          'backSide',\r\n          'rightSide',\r\n          'leftSide',\r\n          'topSide',\r\n          'bottomSide',\r\n        ][sideIdx]\r\n      ];\r\n    Object.assign(val.style, imgParam);\r\n    // val.value = item.src\r\n    this.cdref.detectChanges();\r\n  };\r\n  checkIfSliceboxCanAnimate =() =>{\r\n    let result =!this.params.isFinishedResizing ||\r\n      this.params.isAnimating ||\r\n      !this.params.isReady ||\r\n      this.params.itemsCount < 2;\r\n\r\n    return result\r\n  }\r\n  determineNextRotation =(dir: WmlSliceboxDirection)=>{\r\n    if(dir === \"prev\") {\r\n      this.el.nativeElement.style.setProperty(\r\n        '--reverse-deg-end',\r\n        this.params.prevRotationDegree\r\n      );\r\n    }\r\n    else{\r\n      this.el.nativeElement.style.setProperty(\r\n        '--reverse-deg-end',\r\n        this.params.nextRotationDegree\r\n      );\r\n    }\r\n  }\r\n  determineNextSlide( dir: WmlSliceboxDirection,jumpTo?: number) {\r\n\r\n    if (typeof jumpTo === \"number\") {\r\n      this.params.current.index = jumpTo;\r\n    }\r\n    else if (dir === 'next') {\r\n      this.params.current.index =\r\n        this.params.current.index < this.params.itemsCount - 1\r\n          ? this.params.current.index + 1\r\n          : 0;\r\n    }\r\n    else if (dir === 'prev' ) {\r\n    this.params.current.index =\r\n      this.params.current.index > 0\r\n        ? this.params.current.index - 1\r\n        : this.params.itemsCount - 1;\r\n      }\r\n    this.determineNextRotation(dir)\r\n\r\n  }\r\n\r\n  updateDispersionPoints(cuboid: WmlSliceboxCuboidParams,resizing=false) {\r\n    cuboid.transitionStartTop = cuboid.style.top;\r\n    cuboid.transitionStartLeft = cuboid.style.left;\r\n    if(!resizing) {\r\n      if (cuboid.o === 'h') {\r\n        let base = retriveValueFromCSSUnit(cuboid.style.top);\r\n        cuboid.style.top = cuboid.appliedDisperseFactor + base + 'px';\r\n      } else if (cuboid.o === 'v') {\r\n        let base = retriveValueFromCSSUnit(cuboid.style.left);\r\n        cuboid.style.left = cuboid.appliedDisperseFactor + base + 'px';\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  rotateCuboid = (\r\n    cuboid: WmlSliceboxCuboidParams,\r\n    oneScndBfrCallaback,\r\n    finishedCallback,\r\n    dir?:WmlSliceboxDirection\r\n  ) => {\r\n    cuboid.isRotateComplete = false;\r\n    cuboid.isInDispersion = true\r\n    this.setupImagesBeforeRotation(cuboid,dir);\r\n\r\n\r\n    timer(cuboid.sequentialFactor * cuboid.pos + 30)\r\n      .pipe(\r\n        takeUntil(this.ngUnsub),\r\n\r\n        tap(() => {\r\n          this.updateDispersionPoints(cuboid);\r\n\r\n          cuboid.updateClassString('WmlSliceboxPod1Rotate0');\r\n          this.cdref.detectChanges();\r\n\r\n          timer(cuboid.speed / 2)\r\n            .pipe(\r\n              takeUntil(this.ngUnsub),\r\n              tap(() => {\r\n                cuboid.isInDispersion = false\r\n                cuboid.style.top = cuboid.transitionStartTop;\r\n                cuboid.style.left = cuboid.transitionStartLeft;\r\n                this.cdref.detectChanges();\r\n              })\r\n            )\r\n            .subscribe();\r\n\r\n          timer(cuboid.speed - cuboid.speed * 0.0761904761904762)\r\n            .pipe(\r\n              takeUntil(this.ngUnsub),\r\n\r\n              tap((res) => {\r\n                cuboid.isRotateComplete = true;\r\n                oneScndBfrCallaback(cuboid.pos);\r\n              })\r\n            )\r\n            .subscribe();\r\n\r\n          timer(cuboid.speed)\r\n            .pipe(\r\n              takeUntil(this.ngUnsub),\r\n\r\n              tap((res) => {\r\n                finishedCallback(cuboid.pos);\r\n              })\r\n            )\r\n            .subscribe();\r\n        })\r\n      )\r\n      .subscribe();\r\n  };\r\n  rotateSlide=(dir:WmlSliceboxDirection)=> {\r\n    this.params._dir = dir\r\n    this.params._cuboids\r\n      .forEach((cuboid) => {\r\n        this.rotateCuboid(\r\n          cuboid,\r\n          () => {\r\n            // updates the frontface early for next transition\r\n            this.showImageCuboid(cuboid, cuboid.current.index, 1);\r\n            cuboid.updateClassString('WmlSliceboxPod1Rotate0', 'remove');\r\n          },\r\n          (pos) => {\r\n            if (pos === this.params.cuboidsCount - 1) {\r\n              this.params.isAnimating = false;\r\n              this.startSlideShow().subscribe();\r\n              this.cdref.detectChanges();\r\n            }\r\n          },\r\n          dir\r\n        );\r\n      });\r\n  }\r\n  setCuboidSize = (cuboid: WmlSliceboxCuboidParams) => {\r\n    cuboid.size = {\r\n      width:\r\n        cuboid.o === 'v'\r\n          ? Math.floor(this.params.sliceboxSize.width / cuboid.cuboidsCount)\r\n          : this.params.sliceboxSize.width,\r\n      height:\r\n        cuboid.o === 'v'\r\n          ? this.params.sliceboxSize.height\r\n          : Math.floor(this.params.sliceboxSize.height / cuboid.cuboidsCount),\r\n    };\r\n    // extra space to fix gaps\r\n    cuboid.extra =\r\n      cuboid.o === 'v'\r\n        ? this.params.sliceboxSize.width -\r\n          cuboid.size.width * cuboid.cuboidsCount\r\n        : this.params.sliceboxSize.height -\r\n          cuboid.size.height * cuboid.cuboidsCount;\r\n  };\r\n\r\n  setupImagesBeforeRotation(cuboid: WmlSliceboxCuboidParams,dir?:WmlSliceboxDirection) {\r\n\r\n    this.showImageCuboid(cuboid, cuboid.prev.index, 1);\r\n    if(dir){\r\n      this.showImageCuboid(cuboid, cuboid.current.index, dir===\"next\" ?2 : 4);\r\n    }\r\n  }\r\n\r\n  configureMainCuboidStyle(cuboid: WmlSliceboxCuboidParams) {\r\n    let middlepos = Math.ceil(cuboid.cuboidsCount / 2);\r\n\r\n    let positionStyle =\r\n      cuboid.pos < middlepos\r\n        ? {\r\n            zIndex: ((cuboid.pos + 1) * 100).toString(),\r\n            left:\r\n              (cuboid.o === 'v' ? cuboid.size.width * cuboid.pos : 0) + 'px',\r\n            top:\r\n              (cuboid.o === 'v' ? 0 : cuboid.size.height * cuboid.pos) + 'px',\r\n          }\r\n        : {\r\n            zIndex: ((cuboid.cuboidsCount - cuboid.pos) * 100).toString(),\r\n            left:\r\n              (cuboid.o === 'v' ? cuboid.size.width * cuboid.pos : 0) + 'px',\r\n            top:\r\n              (cuboid.o === 'v' ? 0 : cuboid.size.height * cuboid.pos) + 'px',\r\n          };\r\n\r\n    cuboid.style = {\r\n      ...positionStyle,\r\n    };\r\n    ['width', 'height'].forEach((val) => {\r\n      cuboid.style[val] = cuboid.size[val] + 'px';\r\n    });\r\n    // how much cuboid cuboid is going to move (left or top values)\r\n    cuboid.appliedDisperseFactor =\r\n      cuboid.disperseFactor * (cuboid.pos + 1 - middlepos);\r\n  }\r\n\r\n  configureSideCuboidStyles(\r\n    cuboid: WmlSliceboxCuboidParams,\r\n    updateDimsOnly = false\r\n  ) {\r\n    let rotationDirection = cuboid.reverse ? '' : '-'; //default negative\r\n    let oppositeRotationDirection = cuboid.reverse ? '-' : ''; //default positive\r\n\r\n    let measure: any =\r\n      cuboid.o === 'v' ? cuboid.sliceboxSize.height : cuboid.sliceboxSize.width;\r\n\r\n    cuboid.sidesStyles = {\r\n      frontSide: {\r\n        width:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.width + cuboid.extra\r\n            : cuboid.size.width) + 'px',\r\n        height:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.height\r\n            : cuboid.size.height + cuboid.extra) + 'px',\r\n\r\n        transform:\r\n          'rotate3d( 0, 1, 0, 0deg ) translate3d( 0, 0, ' +\r\n          measure / 2 +\r\n          'px )',\r\n      },\r\n      backSide: {\r\n        width: cuboid.size.width + 'px',\r\n        height: cuboid.size.height + 'px',\r\n        transform:\r\n          'rotate3d( 0, 1, 0, ' +\r\n          oppositeRotationDirection +\r\n          '180deg ) translate3d( 0, 0, ' +\r\n          measure / 2 +\r\n          'px ) rotateZ( ' +\r\n          oppositeRotationDirection +\r\n          '180deg )',\r\n      },\r\n      rightSide: {\r\n        width: measure + 'px',\r\n        height:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.height\r\n            : cuboid.size.height + cuboid.extra) + 'px',\r\n        left:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.width / 2 - cuboid.size.height / 2\r\n            : 0) + 'px',\r\n        transform:\r\n          'rotate3d( 0, 1, 0, ' +\r\n          oppositeRotationDirection +\r\n          '90deg ) translate3d( 0, 0, ' +\r\n          cuboid.size.width / 2 +\r\n          'px )',\r\n      },\r\n      leftSide: {\r\n        width: measure + 'px',\r\n        height:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.height\r\n            : cuboid.size.height + cuboid.extra) + 'px',\r\n        left:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.width / 2 - cuboid.size.height / 2\r\n            : 0) + 'px',\r\n\r\n        transform:\r\n          'rotate3d( 0, 1, 0, ' +\r\n          rotationDirection +\r\n          '90deg ) translate3d( 0, 0, ' +\r\n          cuboid.size.width / 2 +\r\n          'px )',\r\n      },\r\n      topSide: {\r\n        width:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.width + cuboid.extra\r\n            : cuboid.size.width) + 'px',\r\n        top:\r\n          (cuboid.o === 'v'\r\n            ? 0\r\n            : cuboid.size.height / 2 - cuboid.size.width / 2) + 'px',\r\n        height: measure + 'px',\r\n\r\n        transform:\r\n          'rotate3d( 1, 0, 0, ' +\r\n          oppositeRotationDirection +\r\n          '90deg ) translate3d( 0, 0, ' +\r\n          cuboid.size.height / 2 +\r\n          'px )',\r\n      },\r\n      bottomSide: {\r\n        width:\r\n          (cuboid.o === 'v'\r\n            ? cuboid.size.width + cuboid.extra\r\n            : cuboid.size.width) + 'px',\r\n        top:\r\n          (cuboid.o === 'v'\r\n            ? 0\r\n            : cuboid.size.height / 2 - cuboid.size.width / 2) + 'px',\r\n        height: measure + 'px',\r\n        transform:\r\n          'rotate3d( 1, 0, 0, ' +\r\n          rotationDirection +\r\n          '90deg ) translate3d( 0, 0, ' +\r\n          cuboid.size.height / 2 +\r\n          'px )',\r\n      },\r\n    };\r\n\r\n    [\r\n      'frontSide',\r\n      'backSide',\r\n      'rightSide',\r\n      'leftSide',\r\n      'topSide',\r\n      'bottomSide',\r\n    ].forEach((otherVal) => {\r\n      if (updateDimsOnly) {\r\n        delete cuboid.sidesStyles[otherVal].transform;\r\n      }\r\n      let myVal = cuboid[otherVal];\r\n      Object.assign(myVal.style, cuboid.sidesStyles[otherVal]);\r\n    });\r\n  }\r\n\r\n  configureCuboidStyles = (cuboid: WmlSliceboxCuboidParams) => {\r\n    this.configureMainCuboidStyle(cuboid);\r\n    this.configureSideCuboidStyles(cuboid);\r\n  };\r\n\r\n  finishResizing  =($event:TransitionEvent ,cuboid:WmlSliceboxCuboidParams)=>{\r\n    if(\r\n      [cuboid.o === \"v\" ? \"left\" :\"top\"].includes($event.propertyName) &&\r\n      cuboid.cuboidsCount=== cuboid.pos+1 &&\r\n      ($event.elapsedTime > 1 || !this.params.isAnimating)\r\n    ){\r\n      this.params.isFinishedResizing = true;\r\n      this.startSlideShow().subscribe()\r\n      this.cdref.detectChanges();\r\n    }\r\n  }\r\n\r\n  updateSliceboxOnResize = () => {\r\n    return fromEvent(window, 'resize').pipe(\r\n      takeUntil(this.ngUnsub),\r\n      debounceTime(this.params.resizeDelay),\r\n      tap(() => {\r\n        this.params.isFinishedResizing = false\r\n        this.setSliceBoxDims();\r\n        let boxStyle: any = {\r\n          width: this.params.sliceboxSize.width,\r\n          height: this.params.sliceboxSize.height,\r\n          perspective: this.params.perspective + 'px',\r\n        };\r\n        this.perspective.style = boxStyle;\r\n        this.params._cuboids.forEach((cuboid) => {\r\n          this.setCuboidSize(cuboid);\r\n          this.configureMainCuboidStyle(cuboid);\r\n          this.configureSideCuboidStyles(cuboid);\r\n          if (!cuboid.isRotateComplete) {\r\n            this.setupImagesBeforeRotation(cuboid,this.params._dir)\r\n          } else {\r\n            this.showImageCuboid(cuboid, cuboid.current.index, 1);\r\n          }\r\n          if(cuboid.isInDispersion){\r\n\r\n            this.updateDispersionPoints(cuboid,true);\r\n\r\n          }\r\n\r\n        });\r\n        this.cdref.detectChanges();\r\n        // this.firstInit()\r\n      })\r\n    );\r\n  };\r\n\r\n  firstInit = () => {\r\n    this.updateCssVars();\r\n    this.updateSliceboxOnResize().subscribe();\r\n    this.cacheImages()\r\n      .pipe(\r\n\r\n        takeUntil(this.ngUnsub),\r\n        concatMap(() => {\r\n          return this.sliceBoxInit();\r\n        })\r\n      )\r\n      .subscribe();\r\n  };\r\n\r\n  listenForJumpToSlideSubj = ()=>{\r\n    return this.params.jumpToSlideSubj\r\n    .pipe(\r\n      takeUntil(this.ngUnsub),\r\n      filter((index)=>{return index !== this.params.current.index}),\r\n      filter(()=>!this.checkIfSliceboxCanAnimate()),\r\n      tap((index)=>{\r\n        let dir:WmlSliceboxDirection =  index  > this.params.current.index ? \"next\" :\"prev\"\r\n        this.params.isAnimating =true\r\n        this.determineNextSlide(dir,index)\r\n        this.rotateSlide(dir);\r\n      })\r\n    )\r\n  }\r\n\r\n  // TODO implement this mabye\r\n  listenForToggleAutoPlaySubj = ()=>{\r\n    return of([])\r\n    // return this.params.toggleAutoPlaySubj\r\n    // .pipe(\r\n    //   takeUntil(this.ngUnsub),\r\n    //   filter(()=>!this.checkIfSliceboxCanAnimate()),\r\n    //   tap(()=>{\r\n    //     console.log(\"fire3\")\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  listenForMoveToPrevSubj = ()=>{\r\n    return this.params.moveToPrevSlideSubj\r\n    .pipe(\r\n      takeUntil(this.ngUnsub),\r\n      filter(()=>!this.checkIfSliceboxCanAnimate()),\r\n      tap(()=>{\r\n        let dir:WmlSliceboxDirection = \"prev\"\r\n        this.params.isAnimating =true\r\n        this.determineNextSlide(dir)\r\n        this.rotateSlide(dir);\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  listenForMoveToNextSubj = ()=>{\r\n    return this.params.moveToNextSlideSubj\r\n    .pipe(\r\n      takeUntil(this.ngUnsub),\r\n      filter(()=>!this.checkIfSliceboxCanAnimate()),\r\n      tap(()=>{\r\n        let dir:WmlSliceboxDirection = \"next\"\r\n        this.params.isAnimating =true\r\n        this.determineNextSlide(dir)\r\n        this.rotateSlide(dir);\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    this.firstInit();\r\n    this.listenForMoveToNextSubj().subscribe()\r\n    this.listenForToggleAutoPlaySubj().subscribe()\r\n    this.listenForMoveToPrevSubj().subscribe()\r\n    this.listenForJumpToSlideSubj().subscribe()\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsub.next();\r\n    this.ngUnsub.complete();\r\n  }\r\n}\r\n\r\nclass WmlSliceboxDefaults {\r\n  constructor() {\r\n    this.disperseSpeed = this.disperseSpeed ?? this.speed;\r\n  }\r\n\r\n  prev = {\r\n    index: 0,\r\n  };\r\n  current = {\r\n    index: 0,\r\n  };\r\n  sliceboxSize: {\r\n    height?: number;\r\n    width?: number;\r\n  };\r\n  sliceboxSizeUseProvidedValues: boolean = false;\r\n  orientation: 'v' | 'h' = 'v';\r\n  perspective = 10000;\r\n  interval = 3000;\r\n  cuboidsCount = 9;\r\n  disperseFactor = 20;\r\n  disperseSpeed;\r\n  colorHiddenSides = '#222';\r\n  sequentialFactor = 350;\r\n  speed = 15660;\r\n  easing = 'ease-out';\r\n  autoplay = true;\r\n  nextRotationDegree?: string;\r\n  prevRotationDegree?:string;\r\n\r\n  onBeforeChange = function (position) {};\r\n  onAfterChange = function (position) {};\r\n  onReady = function () {};\r\n\r\n  reverse = false;\r\n  images: WmlSliceboxImg[] = [];\r\n\r\n}\r\n\r\nexport class WmlSliceboxParams extends WmlSliceboxDefaults {\r\n  constructor(params: Partial<WmlSliceboxParams> = {}) {\r\n    super();\r\n    Object.assign(this, {\r\n      ...params,\r\n    });\r\n    this._reverse = this.reverse\r\n\r\n    this.nextRotationDegree = this.nextRotationDegree ?? (this._reverse ? '-90deg' : '90deg')\r\n\r\n    let degree:any=this.nextRotationDegree\r\n    degree = retriveValueFromCSSUnit(degree)\r\n\r\n    degree *= -1\r\n    degree +=\"deg\"\r\n    this.prevRotationDegree = this.prevRotationDegree ?? degree\r\n  }\r\n\r\n  _reverse :boolean\r\n  override sliceboxSize = {\r\n    height: 500,\r\n    width: 500,\r\n  };\r\n  _dir:WmlSliceboxDirection\r\n  resizeDelay = 1000\r\n  isAnimating = false;\r\n  isFinishedResizing =true\r\n  isReady = false;\r\n  itemsCount: number;\r\n  animationDuration = 3200;\r\n  realWidth: '500px';\r\n  _cuboids: WmlSliceboxCuboidParams[];\r\n  moveToNextSlideSubj = new Subject<void>()\r\n  moveToPrevSlideSubj = new Subject<void>()\r\n  jumpToSlideSubj = new Subject<number>()\r\n  // TODO mabye implemnt\r\n  // toggleAutoPlaySubj = new Subject<boolean |void>()\r\n\r\n}\r\n\r\nclass WmlSliceboxCuboidParams extends WmlSliceboxDefaults {\r\n  constructor(params: Partial<WmlSliceboxCuboidParams> = {}) {\r\n    super();\r\n    Object.assign(this, {\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  transitionStartTop;\r\n  transitionStartLeft;\r\n  appliedDisperseFactor:number\r\n  class = '';\r\n  classes = [];\r\n  // updateClassString:any=()=>{}\r\n  updateClassString = updateClassString(this, 'class', 'classes');\r\n  size: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n  side = 1;\r\n  pos: number;\r\n  extra: number;\r\n  style: Partial<CSSStyleDeclaration>;\r\n  isRotateComplete = false;\r\n  isInDispersion = false\r\n  sidesStyles: { [k: string]: Partial<CSSStyleDeclaration> };\r\n  o: WmlSliceboxParams['orientation'];\r\n  direction: 'next' | 'prev';\r\n  frontSide = new WMLUIProperty();\r\n  backSide = new WMLUIProperty();\r\n  rightSide = new WMLUIProperty();\r\n  leftSide = new WMLUIProperty();\r\n  topSide = new WMLUIProperty();\r\n  bottomSide = new WMLUIProperty();\r\n}\r\n\r\nexport class WmlSliceboxImg extends WMLImage {\r\n  constructor(params: Partial<WmlSliceboxImg> = {}) {\r\n    super(params);\r\n    Object.assign(this, {\r\n      ...params,\r\n    });\r\n  }\r\n\r\n  // TODO allow developer to specific rotation for each string\r\n  rotationDegree:string\r\n  cachedSrc: string;\r\n}\r\n\r\n\r\ntype WmlSliceboxDirection = \"next\" |\"prev\"\r\n","<div [class]=\"classPrefix('MainPod')\">\r\n  <section #targetPerspective [ngStyle]=\"perspective.style\" [class]=\"classPrefix('Pod1') + ' sb-perspective'\">\r\n    <div    (transitionend)=\"finishResizing($event,cuboid)\" [class]=\"cuboid.class\" [ngStyle]=cuboid.style *ngFor=\"let cuboid of $any(params._cuboids)\">\r\n      <div   [ngStyle]=\"cuboid.frontSide.style\"  class=\"sb-side frontSide\" ></div>\r\n      <div   [ngStyle]=\"cuboid.backSide.style\"   class=\"sb-side backSide\" ></div>\r\n      <div   [ngStyle]=\"cuboid.rightSide.style\"  class=\"sb-side rightSide\" ></div>\r\n      <div   [ngStyle]=\"cuboid.leftSide.style\"   class=\"sb-side leftSide\" ></div>\r\n      <div   [ngStyle]=\"cuboid.topSide.style\"    class=\"sb-side topSide\" ></div>\r\n      <div   [ngStyle]=\"cuboid.bottomSide.style\" class=\"sb-side bottomSide\" ></div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { WmlSliceboxComponent } from './wml-slicebox/wml-slicebox.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WmlSliceboxComponent,\r\n  ],\r\n  imports: [\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    CommonModule\r\n\r\n  ],\r\n  exports:[\r\n    WmlSliceboxComponent\r\n  ]\r\n})\r\nexport class WmlSliceboxModule { }\r\n","/*\r\n * Public API Surface of wml-slicebox\r\n */\r\n\r\n\r\nexport * from './lib/wml-slicebox/wml-slicebox.component';\r\nexport * from './lib/wml-slicebox.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}